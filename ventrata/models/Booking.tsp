import "@typespec/openapi";

import "../../src/models/Booking.tsp";
import "../../src/models/DurationUnit.tsp";
import "../../src/models/capabilities/Capability.tsp";

import "./Agent.tsp";
import "./Reseller.tsp";
import "./SettlementMethod.tsp";
import "./Option.tsp";
import "./Product.tsp";
import "./Availability.tsp";
import "./BookingCancellation.tsp";
import "./Contact.tsp";
import "./UnitItem.tsp";
import "./BookingStatus.tsp";
import "./BookingRejection.tsp";

import "./capabilities/packages/BookingPackages.tsp";
import "./capabilities/adjustments/BookingAdjustments.tsp";
import "./capabilities/pickups/BookingPickups.tsp";
import "./capabilities/questions/BookingQuestions.tsp";
import "./capabilities/pricing/BookingPricing.tsp";

namespace Ventrata;
using OpenAPI;
using Octo;

const BOOKING_REBOOKING_UUID_EXAMPLE = "";
const BOOKING_ORIGINAL_REBOOKING_UUID_EXAMPLE = "";
const BOOKING_ALIAS_EXAMPLE = "";
const BOOKING_SETTLEMENT_METHOD_EXAMPLE = SettlementMethod.DIRECT;
const BOOKING_QUOTE_EXAMPLE = false;
const BOOKING_CONFIRMABLE_EXAMPLE = true;
const BOOKING_PRODUCT_EXAMPLE = PRODUCT_EXAMPLE;
const BOOKING_OPTION_EXAMPLE = OPTION_EXAMPLE;
const BOOKING_AVAILABILITY_EXAMPLE = AVAILABILITY_EXAMPLE;
const BOOKING_CONTACT_EXAMPLE = CONTACT_EXAMPLE;
const BOOKING_AGENT_EXAMPLE = null;
const BOOKING_RESELLER_EXAMPLE = null;
const BOOKING_REQUIRED_CONTACT_FIELDS_EXAMPLE = #[];
const BOOKING_VISIBLE_CONTACT_FIELDS_EXAMPLE = #[];
const BOOKING_UNIT_ITEMS_EXAMPLE = #[UNIT_ITEM_EXAMPLE];
const BOOKING_STATUS_EXAMPLE = BookingStatus.ON_HOLD;
const BOOKING_UTC_NOSHOWED_AT_EXAMPLE = null;
const BOOKING_UTC_REBOOKED_AT_EXAMPLE = null;

const BOOKING_EXAMPLE = #{
  ...Octo.BOOKING_ON_HOLD_EXAMPLE,
  rebookingUuid: BOOKING_REBOOKING_UUID_EXAMPLE,
  originalRebookingUuid: BOOKING_ORIGINAL_REBOOKING_UUID_EXAMPLE,
  `alias`: BOOKING_ALIAS_EXAMPLE,
  settlementMethod: BOOKING_SETTLEMENT_METHOD_EXAMPLE,
  quote: BOOKING_QUOTE_EXAMPLE,
  confirmable: BOOKING_CONFIRMABLE_EXAMPLE,
  cancellation: BOOKING_CANCELLATION_EXAMPLE,
  product: BOOKING_PRODUCT_EXAMPLE,
  option: BOOKING_OPTION_EXAMPLE,
  availability: BOOKING_AVAILABILITY_EXAMPLE,
  contact: BOOKING_CONTACT_EXAMPLE,
  agent: BOOKING_AGENT_EXAMPLE,
  reseller: BOOKING_RESELLER_EXAMPLE,
  requiredContactFields: BOOKING_REQUIRED_CONTACT_FIELDS_EXAMPLE,
  visibleContactFields: BOOKING_VISIBLE_CONTACT_FIELDS_EXAMPLE,
  unitItems: BOOKING_UNIT_ITEMS_EXAMPLE,
  status: BOOKING_STATUS_EXAMPLE,
  rejection: BOOKING_REJECTION_EXAMPLE,
  utcNoshowedAt: BOOKING_UTC_NOSHOWED_AT_EXAMPLE,
  utcRebookedAt: BOOKING_UTC_REBOOKED_AT_EXAMPLE,
};

@example(BOOKING_EXAMPLE)
model Booking extends Octo.BaseBooking {
  @extension("x-order", 1)
  @extension("x-go-name", "capabilities")
  @extension("x-internal", true)
  @extension("x-go-type-skip-optional-pointer", true)
  @extension("x-oapi-codegen-only-honour-go-name", true)
  capabilities?: Capability[];

  /**
   * A unique ID / UUID generated by the supplier system to identify the booking.
   */
  @extension("x-order", 2) @format("uuid") id: string;

  /**
   * A UUID you can set when generating the booking to use as an idempotency key.
   */
  @example(BOOKING_REBOOKING_UUID_EXAMPLE)
  @format("uuid")
  rebookingUuid: string | null;

  /**
   * UUID of the original booking if this booking is a rebooking.
   */
  @example(BOOKING_ORIGINAL_REBOOKING_UUID_EXAMPLE)
  @format("uuid")
  originalRebookingUuid: string | null;

  /**
   * An alias for the booking.
   */
  @example(BOOKING_ALIAS_EXAMPLE)
  `alias`: string | null;

  @example(BOOKING_SETTLEMENT_METHOD_EXAMPLE)
  settlementMethod: SettlementMethod;

  /**
   * If `TRUE`, booking was created as a quote.
   */
  @example(BOOKING_QUOTE_EXAMPLE)
  quote: boolean;

  /**
   * Whether the booking can be confirmed.
   */
  @example(BOOKING_CONFIRMABLE_EXAMPLE)
  confirmable: boolean;

  @example(BOOKING_CANCELLATION_EXAMPLE)
  cancellation: BookingCancellation | null;

  @example(BOOKING_PRODUCT_EXAMPLE)
  product: Product;

  @example(BOOKING_OPTION_EXAMPLE)
  option: Option;

  @example(BOOKING_AVAILABILITY_EXAMPLE)
  availability: Availability;

  @example(BOOKING_CONTACT_EXAMPLE)
  contact: Contact;

  @example(BOOKING_AGENT_EXAMPLE)
  agent: Agent | null;

  @example(BOOKING_RESELLER_EXAMPLE)
  reseller: Reseller | null;

  /**
   * An array of required contact fields.
   */
  @example(BOOKING_REQUIRED_CONTACT_FIELDS_EXAMPLE)
  requiredContactFields: ContactField[];

  /**
   * An array of visible contact fields.
   */
  @example(BOOKING_VISIBLE_CONTACT_FIELDS_EXAMPLE)
  visibleContactFields: ContactField[];

  @extension("x-go-type-skip-optional-pointer", true)
  unitItems: UnitItem[];

  status: BookingStatus;

  @example(BOOKING_REJECTION_EXAMPLE)
  rejection: BookingRejection | null;

  /**
   * An RFC 3339 date times in UTC for when this booking is due to expire if the status is `ON_HOLD`.
   */
  @extension("x-go-type", "types.TimeRFC3339")
  @extension(
    "x-go-type-import",
    {
      path: "ventrata-octo-api/pkg/types",
    }
  )
  utcExpiresAt: utcDateTime | null;

  @example(BOOKING_UTC_NOSHOWED_AT_EXAMPLE)
  @extension("x-go-type", "types.TimeRFC3339")
  @extension(
    "x-go-type-import",
    {
      path: "ventrata-octo-api/pkg/types",
      type: "string",
      format: "date-time",
      nullable: true,
      example: "2022-05-25 11:04:22Z",
      description: "An RFC 3339 date times in UTC for when this booking was marked as no-show.",
    }
  )
  utcNoshowedAt: utcDateTime | null;

  /**
   * An RFC 3339 date time in UTC when the booking was rebooked.
   */
  @example(BOOKING_UTC_REBOOKED_AT_EXAMPLE)
  @extension("x-go-type", "types.TimeRFC3339")
  @extension(
    "x-go-type-import",
    {
      path: "ventrata-octo-api/pkg/types",
    }
  )
  utcRebookedAt: utcDateTime | null;

  /**
   * An RFC 3339 date time in UTC at when the booking was redeemed.
   */
  @extension("x-go-type", "types.TimeRFC3339")
  @extension(
    "x-go-type-import",
    {
      path: "ventrata-octo-api/pkg/types",
    }
  )
  utcRedeemedAt: utcDateTime | null;

  /**
   * An RFC 3339 date time in UTC when the booking was confirmed.
   */
  @extension("x-go-type", "types.TimeRFC3339")
  @extension(
    "x-go-type-import",
    {
      path: "ventrata-octo-api/pkg/types",
    }
  )
  utcConfirmedAt: utcDateTime | null;

  /**
   * An RFC 3339 date time in UTC when the booking was created.
   */
  @extension("x-go-type", "types.TimeRFC3339")
  @extension(
    "x-go-type-import",
    {
      path: "ventrata-octo-api/pkg/types",
    }
  )
  utcCreatedAt: utcDateTime;

  /**
   * An RFC 3339 date time in UTC when the booking was updated.
   */
  @extension("x-go-type", "types.TimeRFC3339")
  @extension(
    "x-go-type-import",
    {
      path: "ventrata-octo-api/pkg/types",
    }
  )
  utcUpdatedAt: utcDateTime;

  ...BookingPricing;
  ...BookingPickups;
  ...BookingQuestions;
  ...BookingPackages;
  ...BookingAdjustments;
}
